// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetTokenRequest struct {
	Appid                string   `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	Appsecret            string   `protobuf:"bytes,2,opt,name=appsecret,proto3" json:"appsecret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTokenRequest) Reset()         { *m = GetTokenRequest{} }
func (m *GetTokenRequest) String() string { return proto.CompactTextString(m) }
func (*GetTokenRequest) ProtoMessage()    {}
func (*GetTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *GetTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenRequest.Unmarshal(m, b)
}
func (m *GetTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenRequest.Marshal(b, m, deterministic)
}
func (m *GetTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenRequest.Merge(m, src)
}
func (m *GetTokenRequest) XXX_Size() int {
	return xxx_messageInfo_GetTokenRequest.Size(m)
}
func (m *GetTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenRequest proto.InternalMessageInfo

func (m *GetTokenRequest) GetAppid() string {
	if m != nil {
		return m.Appid
	}
	return ""
}

func (m *GetTokenRequest) GetAppsecret() string {
	if m != nil {
		return m.Appsecret
	}
	return ""
}

type GetTokenReply struct {
	Code                 int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Err                  string   `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTokenReply) Reset()         { *m = GetTokenReply{} }
func (m *GetTokenReply) String() string { return proto.CompactTextString(m) }
func (*GetTokenReply) ProtoMessage()    {}
func (*GetTokenReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *GetTokenReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenReply.Unmarshal(m, b)
}
func (m *GetTokenReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenReply.Marshal(b, m, deterministic)
}
func (m *GetTokenReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenReply.Merge(m, src)
}
func (m *GetTokenReply) XXX_Size() int {
	return xxx_messageInfo_GetTokenReply.Size(m)
}
func (m *GetTokenReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenReply proto.InternalMessageInfo

func (m *GetTokenReply) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetTokenReply) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *GetTokenReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*GetTokenRequest)(nil), "pb.GetTokenRequest")
	proto.RegisterType((*GetTokenReply)(nil), "pb.GetTokenReply")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x72, 0xe5,
	0xe2, 0x77, 0x4f, 0x2d, 0x09, 0xc9, 0xcf, 0x4e, 0xcd, 0x0b, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e,
	0x11, 0x12, 0xe1, 0x62, 0x4d, 0x2c, 0x28, 0xc8, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c,
	0x82, 0x70, 0x84, 0x64, 0xb8, 0x38, 0x13, 0x0b, 0x0a, 0x8a, 0x53, 0x93, 0x8b, 0x52, 0x4b, 0x24,
	0x98, 0xc0, 0x32, 0x08, 0x01, 0x25, 0x6f, 0x2e, 0x5e, 0x84, 0x31, 0x05, 0x39, 0x95, 0x42, 0x42,
	0x5c, 0x2c, 0xc9, 0xf9, 0x29, 0xa9, 0x60, 0x33, 0x98, 0x83, 0xc0, 0x6c, 0x90, 0xc1, 0x25, 0x20,
	0x15, 0x50, 0xed, 0x10, 0x8e, 0x90, 0x00, 0x17, 0x73, 0x6a, 0x51, 0x91, 0x04, 0x33, 0x58, 0x0c,
	0xc4, 0x34, 0x72, 0xe6, 0xe2, 0x0e, 0x4f, 0x4d, 0xce, 0x48, 0x84, 0x98, 0x27, 0x64, 0xc2, 0xc5,
	0x01, 0x33, 0x5b, 0x48, 0x58, 0xaf, 0x20, 0x49, 0x0f, 0xcd, 0xc1, 0x52, 0x82, 0xa8, 0x82, 0x05,
	0x39, 0x95, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x3f, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc2,
	0xfe, 0xe2, 0xa5, 0xf4, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WechatTokenClient is the client API for WechatToken service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WechatTokenClient interface {
	GetToken(ctx context.Context, in *GetTokenRequest, opts ...grpc.CallOption) (*GetTokenReply, error)
}

type wechatTokenClient struct {
	cc *grpc.ClientConn
}

func NewWechatTokenClient(cc *grpc.ClientConn) WechatTokenClient {
	return &wechatTokenClient{cc}
}

func (c *wechatTokenClient) GetToken(ctx context.Context, in *GetTokenRequest, opts ...grpc.CallOption) (*GetTokenReply, error) {
	out := new(GetTokenReply)
	err := c.cc.Invoke(ctx, "/pb.WechatToken/GetToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WechatTokenServer is the server API for WechatToken service.
type WechatTokenServer interface {
	GetToken(context.Context, *GetTokenRequest) (*GetTokenReply, error)
}

// UnimplementedWechatTokenServer can be embedded to have forward compatible implementations.
type UnimplementedWechatTokenServer struct {
}

func (*UnimplementedWechatTokenServer) GetToken(ctx context.Context, req *GetTokenRequest) (*GetTokenReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetToken not implemented")
}

func RegisterWechatTokenServer(s *grpc.Server, srv WechatTokenServer) {
	s.RegisterService(&_WechatToken_serviceDesc, srv)
}

func _WechatToken_GetToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WechatTokenServer).GetToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.WechatToken/GetToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WechatTokenServer).GetToken(ctx, req.(*GetTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WechatToken_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.WechatToken",
	HandlerType: (*WechatTokenServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetToken",
			Handler:    _WechatToken_GetToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
